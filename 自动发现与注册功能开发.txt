写一个模块发现所有注册的app，并且把注册app的表放到字典里面，包含自定义部分

views:执行每个app里admin的程序


for app_name in conf.setting.INSTALLED_APPS:
try:
mod=__import__('%s.kingadmin'%app_name)
print(mod.kingmod)
except ImportError:
pass
把kingadmin.py 导入到views里面

admin里面有自定义的部分（注册全局的字典）


kingadmin
admin
views


python manage.py shell
配置好了环境变量，可以切换到所在位置，导入你自己写的模块

model_class._meta.app_label
拿到这个crm这个app

enabled_admins
这个是拿到所有的东西



def register(self,model_class,admin_class=None):
#注册admin表

print(model_class,admin_class)
第一个是app名字，第二个是表名

app_name=model_class._meta.app_label#这个取得是里面的所有的app
model_name=model_class._meta.model_name#这个取得是里面的表



if app_name not in self.enabled_admins:
	self.enabled_admins[app_name]={}
#创建对应的app字典

self.enabled_admin[app_name][model_name]=admin_class
#把app里面的表放到对应的app里面的字典里



pthon没有实例多次，只是再次导入时，拿的是它的内存地址，优化



































